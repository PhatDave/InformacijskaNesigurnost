{
    "1.Osnovne sigurnosne pretpostavke, pojmovi, usluge i mehanizmi.": "Osnovne sigurnosne pretpostavke su:\nTajnost-Podrazumijeva se osiguranje da privatna informacija neće biti dostupna neovlastenim\nosobama.\nIntegritet-Podrazumijeva se osiguranje da neovlastena osoba neće moći izmijeniti podatke i\nprograme\nDostupnost-Podrazumijeva se osiguranje da će sustav u svakom trenutku biti na raspolaganju\nsvojim autoriziranim korisnicima.\nDodatne sigurnosne pretpostavke su autenticnost i odgovornost.\nSigurnosna usluga- svaka usluga koja povećava sigurnost sustava za prijenos ili obradu podataka s\nciljem odbijanja mogućih napada.\nSigurnosne usluge\nAutentifikacija: osigurava autenticnost komunikacije postoje autentifikacija subjekata u\nkomunikaciji i autentifikacija porijekla podataka.\nKontrola pristupa: mogućnost ogranicavanja i kontrole pristupa uredajima i aplikacijama\nmreznim putem.\nPovjerljivost podataka: osigurava podatke od neautoriziranog pristupa njihovom sadrzaju\nIntegritet podataka: osigurava da su podaci primljeni u tocno onakvom obliku u kakvom su\nposlani od strane autoriziranog subjekta\nSigurnosni mehanizam- svaki proces ili uredaj koji ima cilj detektirati i sprijeciti sigurnosni napad,\nili izvesti oporavak nakon sigurnosnog napada.\nSigurnosni mehanizam\nŠifriranje-Transformacija podataka primjenom matematickih algoritama u naizgled necitljiv oblik,\npri cemu je za povratak u izvorni oblik potrebno poznavati algoritam i enkripcijski kljuc.\nDigitalni potpis-Dodatak izvornom podatku koji primatelju potvrduje izvor i integritet podatka\nKontrola pristupa-Pristup resursima kroz strogo definirana pristupna pravila.\nIntegritet podataka- Razliciti nacini za osiguranje integriteta podatkovnih tokova ili pojedinacnih\npodatkovnih blokova.\nAutentifikacijska razmjena -Mehanizam za utvrdivanje identiteta subjekata u komunikaciji.\nMehanizmi koji jos postoje su nadopunjavanje prometa, kontrola usmjeravanja, ovjera.\n",
    "2. Osnovni kriptografski pojmovi i klasifikacija kriptosustava.": "a. Kriptografija–znanstvena disciplina koja proucava razlicite metode za slanje poruka u\ntakvom obliku da ih moze procitati samo onaj kome su namijenjene\nb. Kriptografski pojmovi:\ni. Otvoreni tekst – izvorna poruka koju posiljalac zeli poslati primaocu\nii. Šifratili kriptogram – naizgled necitljiva poruka dobivena kriptografskim\npostupkom\niii. Šifriranje, kriptiranje ili enkripcija – postupak transformacije otvorenog\nteksta u kriptogram\niv. Desifriranje ili dekripcija – transformacija otvorenog teksta uz poznavanje\nkriptografskog kljuca\nv. Kripto analiza – desifriranje sifrata bez poznavanja kriptografskog kljuca\nvi. Kriptologija – grana znanosti koja obuhvaća kriptografiju i kripto analizu\nvii. Kriptografski algoritam, sifra – matematicka funkcija koja sluzi za sifriranje i\ndesifriranje\nviii. Prostor kljuceva – skup svih mogućih vrijednosti kljuceva\nix. Kriptosustav – sastoji se od kriptografskog algoritma, svih mogućih otvorenih\ntekstova, sifrata i kljuceva\nc. Klasifikacija kriptosustava:\ni. Prema tipu operacije:\n1 Supstitucijski\n2 Transpozicijski\nii. Prema nacinu obrade otvorenog teksta:\n1 Blokovna sifra\n2 Uravnotezena sifra\niii. Prema tajnosti/javnosti kljuca:\n1 Simetricni(s tajnim kljucem)\n2 Asimetricni(s javnim kljucem)\n",
    "3. Monoabecedna supstitucija.": "Monoabecedna supstitucija povećava prostor kljuceva, za skup od n elemenata postoji n! mogućih\npermutacija.To znaci da za supstitucijsku sifru temeljenu na permutaciji 26 znakova abecede\npostoju 26! mogućih kljuceva.\n",
    "4. Playfairova šifra.": "a. Koristi blokove slova kao elemente otvorenog teksta i sifriraju se parovi tako da\nrezultat ovisi o oba slova(bigramska sifra)\nb. Koristi matricu 5x5 koja se formira pomoću kljucne rijeci- slova kljucne rijeci bez\nponavljanja se upisuju od lijeva prema desno i od gore prema dolje, nakon cega se po\nredu upisuju ostala slova abecede\nc. Kod sifriranja se otvoreni tekst podjeli na blokove od 2 slova i ovisi o njihovoj poziciji\nradi se supstitucija:\ni. Oba slova u istom retku – zamjenjuj se slovom koje je jedno mjesto udesno\nii. Oba slova u istom stupcu – zamjenjuju se slovom koje je jedno mjesto ispod\niii. Slova nisu u istom retku ni stupcu –zamjenjuju se sa slovima koja su u istom\nretku kao jedno, a u istom stupcu kao drugo slovo(tako da tvore kvadrat),\nprvo se stavlja slovo u istom t+retku kao i slovo u pocetnom bloka\nKljucna rijec: PLAYFAIR\nParovi koje sifriramo: KO->NS\nJH->FT\nPD->IB\n",
    "5. Hillova šifra.": "-Hillova sifra predstavlja kriptosustav kod kojeg se m uzastopnih slova otvorenog teksta zamjenjuje\ns m slova u sifratu.\n-Ukoliko broj slova otvorenog teksta nije djeljiv sa m poruku treba nadopuniti, kako bi se mogla\npodijeliti na blokove od po m slova.\n-Matrica K koja se koristi kao kljuc mora biti invertibilna, budući da se prilikom desifriranja koristi\nnjezin inverz.\n",
    "6. Vigenereova šifra.": "-Vigenèreova sifra- najpoznatija poliabecedna supstitucija sifri\n-Za sifriranje poruke potreban je kljuc jednake duljine kao i sama poruka, ovaj kljuc se obicno\ndobije ponavljanjem jedne kljucne rijeci.\n-Prednost Vigenereove sifre je u tome sto se za sifriranje jednog slova iz otvorenog teksta koristi\nvise razlicitih slova u sifratu.\n-Medutim, postoje metode za kriptoanalizu Vigenereove sifre, prvi korak prilikom kriptoanalize\nVigenereove sifre jest odredivanje duljine kljucne rijeci,jedna od mogućih metoda za odredivanje\nduljine kljucne rijeci zove se Kasiskijev test\n\n",
    "7. Jednokratna bilježnica.": "a. Teoretski savrseno sigurni sustav koji koristi potpuno slucajan jednokratni kljuc jednake\nduljine kao i otvoreni tekst. Šifrat se dobiva XOR funkcijom na odgovarajućim bitovima\notvorenog teksta i kljuca, desifriranje je identicno postupku sifriranja.\n",
    "8. Transpozicijska šifra.": "b. Elementi otvorenog teksta ostaju isti u sifratu, samo im je redoslijed izmjenjen.\nc. Najcesće upotrebljavana sifra je transpozicijska sifra – otvoreni tekst se upisuje\npravokutnik po recima, a potom se iscitava po stupcima izmjenjenog redoslijeda. Ako\nposljednji redak nije ispunjen do kraja, ispunjava se proizvoljnim slovima.\nd. Čistu transpozicijsku sifru je lako desifrirati zato sto su frekvencije slova u sifratu\njednake kao i u otvorenom tekstu, no sigurnost se moze povećati visestrukom\ntranspozicijom.\n",
    "9. Strojevi za šifriranje": "- Algoritmi za sifriranje koji izvode transpozicije kroz vise koraka (stupnjeva) znacajno su otporniji na\nkriptoanalizu.\n- ubrzavaju sifriranje i desifriranje uz mogućnost koristenja velikog broja razlicitih kljuceva.\nJEFFERSONOV KOTAČ\n- Najstarija poznata naprava za sifriranje je Jeffersonov kotac za sifriranje.\n- Jeffersonov kotac cini skup od 26 diskova na zajednickoj zeljeznoj osovini, oko koje se diskovi mogu\nokretati neovisno jedan od drugog.\n- Na svakom disku se nalazi 26 slova engleske abecede rasporedeno na slucajan nacin (razlicit od\ndiska do diska)\n- Posiljalac i primalac posjeduju dva identicna kotaca.\n- Posiljalac podijeli otvoreni tekst na blokove od po 26 slova.\n- Potom rotiranjem oko osovine diskove postavi tako da jedan od redaka sadrzi otvoreni tekst (za\nsifrat moze izabrati bilo koji od preostalih 25 redaka).\n- Primalac rotiranjem diskove postavi tako da jedan redak sadrzi sifrat, te medu preostalih 25 redaka\npronade redak koji sadrzi smisleni tekst (otvoreni tekst).\n\nHEBERNOV STROJ\n- Prvi elektricni stroj za sifriranje , Edward Hugh Hebern 1915. godine.\n- Stroj je bio sastavljen od dva elektricna pisaća stroja povezana pomoću 26 zica, ali sa izmijenjenim\n(slucajnim) rasporedom.\n- Pritiskom tipke na pisaćem stroju za otvoreni tekst drugi stroj automatski otipkava sifrat tog slova.\n- Na taj nacin zapravo se dobijala obicna monoalfabetska sifra (budući da se raspored zica nije\nmijenjao tijekom sifriranja jedne poruke), ali je po prvi puta postupak sifriranja bio automatiziran.\n- Kasnije Hebern prosiruje svoj stroj ugradnjom 5 rotora - svaki rotor imao je po 26 elektricnih\nkontakata s obje strane (svaki kontakt s jedne strane nasumicno je povezan zicom s kontaktom s\ndruge strane).\n- Prema tome, rotor je predstavljao jednu monoabecednu supstituciju.\n- Medutim, rotori se rotiraju na nacin da kada prvi rotor napravi cijeli krug sljedeći se pomice za\njedno mjesto (i tako redom) - takvim rotiranjem rotora dobija se poliabecedna supstitucija s periodom\n265 (priblizno 107 ).\nENIGMA\n- Arthur Scherbius 1918. godine, pred kraj Prvog svjetskog rata.\n- Najmasovnija uporaba Enigme zabiljezena je neposredno prije i za vrijeme Drugog svjetskog rata.\n- Enigma je imala tipkovnicu sa 26 tipki (slicnu pisaćem stroju), zaslon sa 26 zaruljica (za prikaz\nsifriranog izlaza), tri mehanicka rotora (sifrarnika) i elektricnu prespojnu plocu.\n- Mehanicki rotori sastojali su se od diskova sa 26 kontakata, pri cemu je svaki kontakt na jednoj\nstrani povezan sa nekim drugim kontaktom na suprotnoj strani.\n- Kontakti susjednih stranica se medusobno dodiruju, tako da izlaz jednog rotora predstavlja ulaz\ndrugog.\n- Izlaz posljednjeg rotora vezan je za tzv. reflektor, statican mehanicki disk s medusobno prespojenim\nkontaktima samo na jednoj strani (reflektor elektricni signal salje natrag kroz rotore, ali drugim\nputem).\n- Nakon svakog sifriranog slova prvi se rotor okrene za jedan kontakt, dok se sljedeći rotor pomice za\njedan kontakt nakon sto prethodni napravi puni krug.\n- Tri ozicena rotora sa po 26 kontakata omogućavaju 26 3=17576 kombinacija, sto je premali broj za\nzadovoljavajuću razinu sigurnosti.\n- Dodavanje novih rotora povećava velicinu i tezinu uredaja, pa je Scherbius pokusao povećati\nsigurnost primjenom izmjenjivih rotora i prespojne ploce.\n- Tri rotora mogu se rasporediti na 3! = 6 nacina (123, 132, 213, 231, 312, 321).\n- Elektricna prespojna ploca omogućavala je da se (dodavanjem prespojnih kabela) „zamijene“ neka\nslova prije ulaska u rotor.\n- U pocetku se koristilo 6 prespojnih kabela (omogućavaju zamjenu 6 parova slova, preostalih 14\nslova se sifriraju bez utjecaja prespojne ploce), da bi se od 1939. godine preslo na koristenje 10\nprespojnih kabela.\n- Već i uz koristenje 6 prespojnih kablova broj mogućih postavki Enigme vrlo je velik (preko 1016),\nsto onemogućava napad „grubom silom“ (isprobavanjem svih mogućih kombinacija).\n- Ipak, kriptoanaliza Enigme uspjesno je provedena (kombinacijom metoda kriptoanalize i klasicne\nspijunaze), sto je u povijesnom kontekstu predstavljalo jedan od kljucnih dogadaja i prekretnicu u\nDrugom svjetskom ratu.\n\n",
    "10. Feistelova šifra": "-naizmjenicna uporaba supstitucija i transpozicija kroz vise iteracija (rundi)\n- Blokovna sifra radi sa blokom otvorenog teksta duljine n bita i kreira sifrat jednake duljine.\n- Prema tome, postoji 2n mogućih blokova otvorenog teksta, i svaki mora proizvesti jedinstveni blok\nsifrata (da bi desifriranje bilo moguće transformacija mora biti reverzibilna – ne smije se dogoditi da\nse dva razlicita bloka otvorenog teksta transformiraju u isti blok sifrata).\n- Dakle, broj mogućih transformacija je 2n ! (za prvi blok imamo 2n mogućih transformacija, za drugi\npreostaje 2n -1, i tako redom...).\n- Za realizaciju Feistelove sifre potrebno je definirati sljedeće parametre:\n- Velicina bloka: s povećanjem velicine bloka povećava se razina sigurnosti, ali se ujedno smanjuje\nbrzina sifriranja/desifriranja za neki zadani algoritam (najcesće se koriste blokovi od 64 ili 128 bita)\n- Duljina kljuca: s povećanjem duljine kljuca raste razina sigurnosti, ali se smanjuje brzina\nsifriranja/desifriranja (najcesće se koriste 128-bitni kljucevi, dok se 64 bitni danas smatraju\nnedovoljnim)\n- Broj iteracija (rundi): veći broj iteracija povećava razinu sigurnosti (najcesće se koristi 16 iteracija)\n- Algoritam kreiranja potkljuceva (za pojedinu iteraciju): veća kompleksnost ovog algoritma povećava\notpornost sifre na kriptoanalizu\n- Funkcija runde F: slozenija funkcija F povećava otpornost sifre na kriptoanalizu\n",
    "11. DES (Data Encryption Standard).": "a. Šifriranje pocinje inicijalnom permutacijom(fiksna), zatim prolazi kroz 16 rundi\nfunkcije f(Feistelova sifra)\nb. Slijedi DES – funkcija koja prima 2 niza bitova jedan od 32 bita i jedan od 48\nbitova(kljucne iteracije). Prvi korak DES funkcije je ekspanzija – niz od 32 bita se\nprosiri na 42 bita da bi se izjednacio s duljinom kljuca. Slijedi XOR zbrajanje s kljucem\nnakon cega se vrsi supstitucija pomoću S-kutija, koriste se 8 fiksnih matrica 4x16 ciji\nse elementi izmedu 0 i 15, u svaku od njih ulazi 6, a izlazi 4 bita. Na izlazu se S-kutija\nse dobije niz od 32 bita na kojima se izvrsi permutacija.\nc. Desifriranje je identicno sifriranje samo je redoslijed kljuceva obrnut\nd. Cilj je da mala promjena u otvorenom tekstu ili kljucu uzrokuje velika promjena\nsifrata(„efekt lavine“)\n",
    "12. AES (Advanced Encryption Standard)": "1997 NIST raspisuje natjecaj za novi kriptosustav koji bi trebao zamijeniti DES.\nDefinirani zahtjevi su bili: mora biti simetrican blokovnikriptosustav, treba raditi sa blokovima duljine\n128 bita i mora podrzavati tri duljine kljuceva: 128, 192 i 256 bita.\nAES koristi blokove otvorenog teksta duljine 128 bita, dok duljina kljuca moze biti 128, 192 ili 256\nbita. Ovisno o duljini kljuca, algoritam se oznacava kao AES-128, AES-192 ili AES-256.\nUlaz u algoritam za enkripciju i dekripciju je 128-bitni blok, koji se moze promatrati kao polje od 16\nbajtova. Ovakav blok (AES blok) reprezentira se pomoću matrice dimenzija 4x4.\nKljuc (128-bitni) se takoder moze prikazati kao kvadratna matrica bajtova, koja se onda\nodgovarajućim postupkom prosiruje kako bi se generirao niz medukljuceva.\nProsireni kljuc sastoji se od 44 rijeci (4-bajtnih vektora).\nPostupak sifriranja sastoji se od 10 rundi za AES-128, 12 rundi za AES-192 i 14 rundi za AES-256.\nSvaka runda sastoji se od 4 operacije:\n- SubBytes\n- ShiftRows\n- MixColumns\n- AddRoundKey\nInicijalno se (prije prve runde) provodi operacija AddRoundKey (sto se moze smatrati nultom\nrundom).\nSvaka transformacija uzima jednu ili vise 4×4 matrica kao ulaz, te proizvodi jednu 4×4 matricu kao\nizlaz.\nZa strukturu AES algoritma vrijede sljedeće napomene:\n- AES nema strukturu Feistelove sifre\n- Pocetni kljuc prosiruje se u niz od 44 32-bitne rijeci\n- AddRoundKey je jedina operacija u kojoj se koristi kljuc\n- Svaka operacija je reverzibilna\n- Prilikom desifriranja kljucevi pojedinih rundi koriste se obrnutim\nredoslijedom\n-Posljednja runda sastoji se od samo tri operacije.\nSubstituteBytes -Svaki pojedinacni bajt trenutnog stanja mapira se u novi bajt na sljedeći nacin: 4\nlijeva bita iz bajta adresiraju redak u tablici, dok 4 desna bita adresiraju stupac. - Ove dvije vrijednosti\nodreduju ineks mjesta u tablici (S-kutiji) sa kojeg će se iscitati vrijednost izlaznog bajta.\nShiftRows - ShiftRows transformacija ciklicki pomice elemente i-tog retka AES bloka za i mjesta ulijevo\n(i = 0, 1, 2, 3).\nMixColumns - Kod MixColumns transformacije svaki bajt iz stupca mapira se u novu vrijednost koja\npredstavlja funkciju od sva cetiri bajta u tom stupcu.\nAddRoundKey - Prilikom AddRoundKey transformacije primjenjuje se logicka XOR funkcija izmedu 128\nulaznih bitova i 128 bitova kljuca odgovarajuće runde.\n\n",
    "13. Načini rada blokovnih šifri.": "- Uzimaju blokove otvorenog teksta fiksne duljine od b bitova kao ulaz, te proizvode blokove sifrata\njednake duljine (b).\n- Ako je duljina otvorenog teksta veća od b, blokovna sifra moze se koristiti tako da se otvoreni tekst\npodijeli na blokove duljine b bitova.\n- Ako bi se vise blokova otvorenog teksta sifriralo istim kljucem ,sigurnost sifrata opada.\n- Definirano je i standardizirano pet nacina (modusa) rada blokovnih sifri, koje je moguće koristiti sa\nbilo kojom blokovnom sifrom (npr. DES ili AES).\n- Ovi nacini rada osmisljeni su kako bi se pokrio sirok spektar mogućih aplikacija\nECB (electronic codebook) - otvoreni tekst dijeli se na b-bitne blokove (u slucaju potrebe posljednji\nblok se nadopuni na b bitova), idealan za kratke poruke i razmjenu kljuceva(sto je poruka duza\nsigurnost ECB opada)\nCBC (cipher block chaining) - na trenutni blok otvorenog teksta primijeni operaciju XOR sa sifratom\nprethodnog bloka, a tek potom se provodi sifriranje pomoću kljuca K.\nCFB (cipher feedback) - odjednom obraduje s bitova (1 ≤ s ≤ b). Najcesće s = 1 (bit po bit) ili s = 8\n(sifrira se znak po znak), otvoreni tekst podijeli se u segmente od s bitova. koristi se posmacni (shift)\nregistar od b bitova u koji se na pocetku postavlja inicijalizacijski vektor.\nOFB (output feedback) – slican CBF, razlika je u tome sto se ulazni podatak za funkciju sifriranja u\nidućem koraku salje odmah nakon primjene funkcije sifriranja u prethodnom koraku (prije primjene\nfunkcije XOR).\nCTR (counter) - u postupcima sifriranja i desifriranja koristi se niz brojaca (countera) T1 , T2 , ..., TN .\nBrojaci su jednake duljine kao blokovi otvorenog teksta i moraju biti u parovima razliciti...prvom\nbrojacu pridruzi neka inicijalna vrijednost, a potom se ostali brojaci povećavaju za jedan. Prilikom\nenkripcije, brojac se sifrira, potom se primijeni operacija XOR na sifrirani brojac i blok otvorenog\nteksta.\n///dodatno za znati o blokovnim siframa\nBlokovna sifra (engl. block cipher) dijeli otvoreni tekst na pojedinacne blokove fiksne duljine\n(najcesće 64 ili 128 bita).\n- Tajni kljuc (poznat objema stranama u komunikaciji) primjenjuje se za sifriranje svakog pojedinog\nbloka otvorenog teksta, pri cemu se dobija blok sifrata jednake duljine.\n- Koristeći razlicite nacine rada, blokovne sifre postizu jednak ucinak kao i protocne sifre, u praksi\nzastupljenije od protocnih\n-Feistelova sifra – najpoznatija blokovna sifra (naizmjenicna uporaba supstitucija i transpozicija kroz\nvise iteracija) - radi sa blokom otvorenog teksta duljine n bita i kreira sifrat jednake duljine.\n-transformacija mora biti reverzibilna (dva razlicita otvorena teksta ne smiju imati isti sifrat)\n",
    "14. Asimetrični kriptosustavi (osnovni pojmovi, princip rada, usporedba sa simetričnim).": "Asimetricni:\nAsimetricni enkripcijski algoritmi oslanjaju se na jedan kljuc za sifriranje, a drugi (razliciti) kljuc za\ndesifriranje.\nKljuc i za sifriranje se naziva javni , kljuc za desifriranje je tajni kljuc.\nSvaki korisnik generira par kljuceva koji će se koristiti za sifriranje i desifriranje poruka\nKorisnik jedan kljuc ucini javno dostupnim , dok istovremeno cuva tajnost drugog pripadajućeg kljuca\nDiffie i Hellman zacetnici kriptografije javnog kljuca.\n- Kljucni koraci pri tome su sljedeći:\n- svaki korisnik generira par kljuceva koji će se koristiti za sifriranje i desifriranje poruka\n\n- korisnik jedan kljuc ucini javno dostupnim dok istovremeno cuva tajnost drugog\npripadajućeg kljuca\n- ukoliko osoba A zeli poslati tajnu poruku osobi B, za sifriranje će koristiti javni kljuc osobe B\n- osoba B će u tom slucaju primljenu poruku desifrirati svojim pripadajućim tajnim kljucem\ntri razlicita podrucja primjene:\nsifriranje/desifriranje\ndigitalni potpis\nrazmjena kljuceva\nPrednosti:\nne postoji potreba za sigurnim komunikacijskim kanalom za potrebe razmjene kljuceva\nmogu se koristiti za potrebe digitalnog potpisivanja poruke\nPuno slozeniji algoritmi\nKod hibridnih kriptosustava se poruke razmjenjuju pomoću simetricnog kriptosustava, dok\nasimetricni sluzi za razmjenu kljuca.\nUsporedba\nSimetricni\nAsimetricni\nIsti algoritam sa istim kljucem se koristi za sifriranje i\ndesifriranje poruke.\nJedan algoritam za sifriranje i pripadajući povezani\nalgoritam za desifriranje sa parom kljuceva\njedan kljuc za sifriranje i desifriranje\nJedan kljuc za sifriranje, jedan za desifriranje\nPosiljaoc i primatelj moraju dijeliti algoritam i kljuc\nPosiljaoc i primatelj moraju posjedovati kljuc koji odgovara\nsvom paru kod druge osobe.\nKljuc mora biti tajan\nJedan od para kljuceva mora biti tajan\nMora biti nemoguće probiti sifrat ako je kljuc tajan\nMora biti nemoguće probiti sifrat ako je kljuc tajan\nPoznavanje algoritma mora biti nedovoljno za razbijanje\nsifrata i otkrivanja kljuca\nPoznavanje algoritma i jednog od kljuceva mora biti\nnedovoljno za razbijanje sifrata i otkrivanje drugog kljuca\n\n",
    "15. RSA kriptosustav.": "-Kod RSA kriptosustava otvoreni tekst i sifrat su cijeli brojevi izmedu 0 i n-1 za neku vrijednost n.\n-Tipicna vrijednost za n je 1024 bita (309 decimalnih znamenki), sto znaci da je n<21024\n-Otvoreni tekst sifrira se u blokovima, svaki blok ima binarnu vrijednost manju od n.\n-Velicina bloka mora biti manja ili jednaka od log2(𝑛) + 1.\n- Posiljatelj i primatelj moraju znati vrijednost n.\n- Posiljatelj zna vrijednost e, dok samo primatelj zna vrijednost d.\n- U ovom slucaju javni kljuc je PU={e, n}, a privatni kljuc je PR={d, n}.\n- Da bi bio zadovoljavajući za enkripciju javnim kljucem, moraju biti zadovoljeni sljedeći zahtjevi:\n- moguće je pronaći vrijednosti e, d i n takve da Med𝑚𝑜𝑑(𝑛) = 𝑀 za sve M < n\n- relativno je lako izracunati 𝑀e 𝑚𝑜𝑑𝑛 i 𝐶d𝑚𝑜𝑑𝑛 za sve vrijednosti M < n\n- nemoguće je (u razumnom vremenu) odrediti d iz poznatih e i n.\n-Privatni kljuc sastoji se od para {d, n}, a javni kljuc sastoji se od para {e, n}.\nPU- javni kljuc\nPR-privatni kljuc\n- Pretpostavimo da osoba A objavi svoj javni kljuc, osoba B zeli poslati poruku M osobi A.\n- U tom slucaju osoba B izracunava sifrat kao 𝐶 = 𝑀𝑒𝑚𝑜𝑑 (𝑛) i salje ga osobi A.\n- Osoba A desifrira poruku izracunavajući: 𝑀 = 𝐶𝑑𝑚𝑜𝑑 (𝑛).\n\n",
    "16. Diffie-Hellmanov protokol za razmjenu ključeva.": "Temeljen na problemu diskretnog logaritma.\nvrlo tesko izracunati diskretne logaritme\nZa velike proste brojeve se smatra nemogućim izracunati diskretne logaritme u razumnom\nvremenskom intervalu.\nPrimitivni korijen prostog broja p je onaj cije potencije modulo p generiraju sve cijele brojeve od 1 do\np-1.\n-Postoje dva javno dostupna broja: prost broj p i cijeli broj α koji je primitivni korijen od q.\n- osoba A i osoba B zele kreirati dijeljeni (zajednicki) kljuc.\n- Osoba A slucajnim odabirom bira cijeli broj 𝑋𝐴<𝑞 i izracunava 𝑌𝐴 = 𝛼𝑋\n𝐴𝑚𝑜𝑑𝑞.\n- Slicno, osoba B neovisno bira slucajni cijeli broj 𝑋𝐵<𝑞 i izracunava 𝑌𝐵 = 𝛼𝑋\n𝐵𝑚𝑜𝑑𝑞.\n- Svaka strana zadrzava vrijednost X kao privatnu, dok objavljuje drugoj strani vrijednost Y.\n-Prema tome, XA je privatni kljuc osobe A, a YA je javni kljuc osobe A\n- Osoba A izracunava kljuc kao 𝐾 = (𝑌𝐵) 𝑋𝐴𝑚𝑜𝑑𝑞, a osoba B izracunava kljuc kao 𝐾 = (𝑌𝐴) 𝑋𝐵𝑚𝑜𝑑𝑞.\n- Ova dva izracunavanja daju identican rezultat.\n- Rezultat (K) predstavlja „tajnu vrijednost” koju su osoba A i osoba B razmijenile, i obicno se ona\nkoristi kao tajni dijeljeni simetricni kljuc.\n",
    "17. Kriptografske hash funkcije (pojam, načini rada).": "-Hash funkcija H je funkcija koja za ulazni podatkovni blok M (poruka, datoteka...) varijabilne duljine\nizracunava tzv. „hash“ vrijednost h=H(M) koja je fiksne duljine (unaprijed odredene).\n-već i mala promjena ulaza M rezultirati će promjenom odgovarajuće hash vrijednosti (hash koda).\n-poput masine za mljeti meso - ubacimo otovreni tekst izlazi nam necitljiv, nerazuman i nelogican\ntekst(fiksne duljine)\n- Hash funkcija radi s ulaznim blokovima proizvoljne duljine\n- Za svaki ulaz (M) relativno lako je izracunati H(M)\n- Za zadanu vrijednost h nemoguće je naći M takav da je H(M)=h (svojstvo jednosmjernosti)\n- Za zadani x efektivno je nemoguće naći y takav da je H(x)=H(y) (otpornost na slabe kolizije)\n- Efektivno je nemoguće naći par (x, y) tako da je H(x)=H(y) (otpornost na jake kolizije)\n- Koriste se prilikom autentifikacije poruke i provjere njenog integriteta\n\n-Primatelj provodi izracunavanje hash vrijednosti i usporeduje rezultat sa primljenom hash\nvrijednosti. Ako se te vrijednosti razlikuju poruka je promjenjena\n",
    "18. SHA (Secure Hash Algorithm)": "a. Kao ulaz uzima poruku duljine do 2128, a kao izlaz vraća hash vrijednost od 512 bita.\nPoruka se procesira u blokoviima po 1024 bita.\nb. Postupak:\ni. Poruka se nadopunjuje bitovima tako da broj bita bude cjelobrojno djeljiv s\n1024 (prvi bit 1 ostali 0)\nii. Dodaje se blok od 128 bita koji oznacava duljinu poruke\niii. Inicijalizacija osam 64-bitnih registara (a-h) gdje će se pohranjivati\nmedurezultati i krajnji rezultati\niv. Procesiranje 1024-bitnih blokova u 80 rundi – U svakoj od 80 rundi koristi se\naditivna konstanta, svaka konstanta predstavlja prva 64 bita decimalnog dijela\nkubnih korijena prvih 80 prostih brojeva. Izlaz iz zadnje runde se zbraja s\nulazom u prvu rundu.\nv. Izlaz iz zadnjeg bloka predstavlja 512-bitni hash\n",
    "19. MAC kodovi": "- Message Authentication Code\n- Autentifikacija poruka\n    - Hash funkcije\n    - Enkripcija poruke\n    - Kodovi za autentifikaciju poruke\n- Kriptografski checksum\n- Isti kurac kao i hash bukv\n- Ali ne treba biti reverzibilan isto kao i hash svaka vam cast\n- Jedna od najrasirenijih shema je HMAC (Hash based MAC)\n",
    "20. Generatori pseudoslučajnih brojeva - ???": "",
    "21. Digitalni potpis – DSA algoritam": "Ideja digitalnog potpisa je da se pomoću izvorne poruke i tajnog kljuca osobe A moze generirati\ndigitalni potpis za osobu A (posiljaoc). Osoba B (primaoc) moze verificirati autenticnost potpisa\nosobe A posjedujući izvornu poruku i javni kljuc osobe A.\nDigitalni potpis predstavlja zapravo kriptosustav temeljen na javnom kljucu (asimetricni kriptosustav)\nkoji je u digitalnom svijetu omogućio potpuni analogon „papirnatog potpisa“, zajedno sa svim\nnjegovim korisnim svojstvima.\nDigitalni potpis omogućuje:\n- Autentifikaciju: osoba B moze provjeriti je li primljenu poruku doista\nposlala osoba A\n- Nepobitnost: osoba A ne moze poreći da je poslala poruku ukoliko\nosoba B posjeduje poruku s njezinim potpisom.\nPostupak : Generiranje kljuca (javnog i privatnog) za potpisivanje poruke,\nPotpisivanje poruke i\nProvjera potpisa\nDSA (Digital Signature Algorithm)\n\n",
    "22. Blok-lanac (Blockchain)": "Tehnologija blok-lanca (blockchain) predstavlja jedno od najbrze rastućih podrucja primjene\nkriptografskih hash funkcija. Blok-lanac zapravo predstavlja distribuiranu bazu podataka (bazu zapisa\ntransakcija).\nBlockchain se realizira kroz distribuiranu peer-to-peer mrezu (nema sredisnjeg posluzitelja sa bazom\npodataka o transakcijama, podaci su distribuirani na veliki broj cvorova).\nBlok-lanac sadrzi listu zapisa (blokova) koja kontinuirano raste, pri cemu se blokovi povezuju i\nosiguravaju primjenom kriptografskih metoda (hash funkcije).\nMnogobrojna moguća podrucja primjene: financije, osiguranja, Internet of Things, smart contracts,\nenergetski sektor, medicina...\n\n",
    "23. Distribucija ključeva pomoću simetrične enkripcije.": "-Za primjenu algoritama za simetricnu enkripciju posiljatelj i primatelj moraju posjedovati zajednicki\ntajni kljuc.\n-Snaga kriptografskog sustava u velikoj mjeri ovisi i o tehnici distribucije kljuceva.\n-Ukoliko osoba A i B dijele tajni kljuc, potreba za promjenom kljuca moze se rijesiti tako da jedna\ndrugoj posalju novi kljuc sifriran pomoću starog. Problem nastaje ukoliko napadac pristupi jednom\nkljucu, tada bi imao pristup i njegovim sljedbenicima. Rjesenje su distribucije kljuceva koja se\noslanjaju na centru za distribuciju kljuceva(KDC). KDC je odgovoran za distribuciju parova kljuceva\nkorisnicima. Svaki korisnik dijeli jedinstveni tajni kljuc sa KDC-om.\n-Funkciju distribucije kljuceva nije nuzno ograniciti samo na jedan centar za distribuciju\n(KDC).Moguće je uspostaviti hijerarhijsko ustrojstvo KDC-ova.\n",
    "24. Distribucija javnih ključeva.": "-Postoji vise predlozenih nacina distribucije javnih kljuceva koji pronalaze svoju prakticnu primjenu.\nMogu se grupirati u cetiri skupine: Javno objavljivanje, Javno dostupni direktoriji, Autoritet za javne\nkljuceve, Certifikati za javne kljuceve.\n-Najjednostavniji nacin objave javnih kljuceva jest njihovo razasiljanje putem mreze na razlicite\nnacine. Nedostatak je mogucnost laziranja ovakvih javnih objava.\n-Stupanj sigurnosti postupka distribucije javnih kljuceva povećava se uvodenjem autoriteta koji\nprovodi stroziju kontrolu distribucije kljuceva iz javnog registra.\n",
    "25. X.509 certifikati.": "-Shema formatiranja certifikata javnih kljuceva koja je postala sveopće prihvaćena. Jezgru X.509\nsheme certificiranja predstavlja certifikat jednoznacno pridruzen svakom korisniku.\n-X.509 standard se temelji na uporabi kriptografije javnog kljuca i digitalnih potpisa.\n-Standard ne inzistira na specificnom algoritmu, no preporucuje RSA.\n-Upravo zbog cinjenice da se ne mogu krivotvoriti, certifikate je moguće pohraniti u repozitorij bez\nposebnih mjera zastite.\n-Svaki certifikat ima svoj ogranicen period trajanja.Uobicajeno je da se novi certifikat izdaje\nneposredno prije isteka starog.\n",
    "26. Kerberos sustav za autentifikaciju.": "-Autentifikacija korisnika predstavlja osnovni temelj sigurnosne arhitekture i „prvu crtu“ obrane\nsustava.\n-Jedan od danas najrasirenijih sustava za autentifikaciju jest Kerberos. Razvijen na MIT-u kao servis\nkoji rjesava problem autentifikacije korisnika u otvorenom distribuiranom okruzenju.\n-U ovakvom okruzenju, posluzitelji moraju ograniciti pristup samo autoriziranim korisnicima i moraju\nomogućiti autentifikaciju zahtjeva za uslugom.\n-Tri razlicita scenarija moguće prijetnje: 1) Napadac moze ostvariti pristup nekoj radnoj stanici i\npretvarati se da je neki drugi korisnik te radne stanice.\n2) Napadac moze promijeniti mreznu adresu radne stanice tako da zahtjevi s nje prividno pristizu s\nneke druge radne stanice. 3) Napadac moze prisluskivati komunikaciju izmedu posluzitelja i radne\nstanice i ostvariti pristup posluzitelju naknadnim ponovnim slanjem uhvaćenih paketa.\n-Umjesto implementacije autentifikacijskih mehanizama na svakom posluzitelju, Kerberos omogućava\nimplementaciju centraliziranog posluzitelja za autentifikaciju, cija je uloga autentificirati posluzitelje\nkorisnicima i korisnike posluziteljima.Kerberos sustav oslanja se na simetricnu enkripciju.\n\n",
    "27. EAP protokol.": "-EAP protokol predstavlja zapravo okvir za autentifikacijske protokole i pristup mrezi.\n-EAP pruza skup protokolnih poruka koje enkapsuliraju razlicite metode autentifikacije koje se koriste\nizmedu klijenta i autentifikacijskog posluzitelja.\n-EAP protokol je prosiriv, te podrzava vise autentifikacijskih metoda.\n-EAP pruza genericku transportnu uslugu za razmjenu autentifikacijskih informacija izmedu klijenta i\nautentifikacijskog posluzitelja.\n-Najcesće koristene metode su: EAP-TLS, EAP-TTLS, EAP-GPSK, EAP-IKEv2.\n",
    "28. SSL/TLS.": "-Jedna od najrasirenijih sigurnosnih usluga je SSL i njezin sljedbenik, standard poznat kao TLS.\n-SSL je općenamjenska usluga implementirana kao skup protokola koji se oslanjaju na TCP.\n-Dva vazna koncepta kod SSL-a su SSL sjednica i SSL konekcija.\n-Konekcija predstavlja transport koji pruza odgovarajuću vrstu usluge (peer-to-peer).\n-Sjednica predstavlja asocijaciju izmedu klijenta i posluzitelja (kreira je SSL handshake protokol).\n-SSL record protokol pruza dvije usluge SSL konekcijama: povjerljivost i integritet poruke.\n-TLS predstavlja rezultat IETF-ove standardizacijske inicijative s idejom kreiranja verzije SSL-a koja će\npostati internetski standard. TLS je zapravo vrlo slican zadnjoj verziji SSL-a.\n",
    "29. SSH.": "-Secure Shell (SSH) je protokol za sigurnu mreznu komunikaciju dizajniran s idejom da bude relativno\njednostavan za implementaciju i uporabu.\nPrva verzija SSH-1 fokusirala se na omogucavanje sigurnog udaljenog rada na racunalu, takoder i\nsiguran prijenos datoteka i e-maila.\n-SSH je organiziran kao tri protokola koja se obicno izvode iznad TCP protokola:Transport Layer\nProtocol, User Authentication Protocol i Connection Protocol.\nSSH podrzava tri metode autentifikacije korisnika: Javni kljuc,lozinka,Hostbased autentifikacija.\n",
    "30. Sigurnost u bežičnim mrežama.": "-Kljucni cimbenici koji doprinose većem sigurnosnom riziku u bezicnim mrezama su sljedeći:\nKanal,Pokretljivost,Resursi,Pristupacnost.\n-U bezicnom mreznom okruzenju postoje tri osnovne komponente koje mogu predstavljati tocku\nnapada: bezicni klijent, bezicna pristupna tocka i sam prijenosni medij\n-Neke od najcesćih sigurnosnih prijetnji prisutnih u bezicnim mrezama su sljedeće:\n-Slucajna asocijacija: situacija u kojoj se korisnik namjerava bezicnim putem povezati na jednu\nlokalnu mrezu, a zapravo se poveze sa bezicnom pristupnom tockom druge lokalne mreze, koja je\ntakoder u dometu.\n-Zlonamjerna asocijacija: situacija u kojoj se bezicni uredaj namjerno konfigurira tako da se drugim\nkorisnicima cini kao legitimna pristupna tocka, sto zlonamjernom korisniku omogućava da ukrade\nautorizacijske podatke (lozinke).\n-Ad hoc mreze: zbog nedostatka sredisnje kontrole ovakve mreze mogu predstavljati sigurnosnu\nprijetnju\n-Netradicionalne mreze: netradicionalne mreze i linkovi (npr. osobni bluetooth uredaji, citaci RFID i\nbar kodova i sl.) mogu predstavljati sigurnosnu prijetnju u smislu da otvaraju mogućnost za\nprisluskivanje i laziranje.\n\n-Krada identiteta (laziranje MAC adrese): u slucaju da (najcesće prisluskivanjem prometa) napadac\nsazna MAC adresu legitimnog korisnika, moze je lazirati te na takav nacin „ukrasti“ identitet\nlegitimnog korisnika.\n-Man-in-the-middle napadi: napadac se postavlja izmedu korisnika i pristupne tocke, a da oni toga\nnisu niti svjesni.\n-Napadi uskraćivanjem resursa: napadac namjerno „zatrpava“ pristupnu tocku porukama s ciljem\niscrpljivanja sistemskih resursa.\n-Napadi umetanjem prometa: napadac umeće mrezne kontrolne poruke kojima pokusava\nrekonfigurirati usmjerivace i narusiti mrezne performanse.\n",
    "31. IEEE 802.11i RSN.": "-Konacni oblik IEEE 802.11i standarda najcesće se oznacava kao RSN.\n-802.11i RSN sigurnosne specifikacije definiraju sljedeće usluge: Autentifikacija,Kontrola pristupa i\nPrivatnost uz integritet poruke.\n-Funkcionalne faze kod IEEE 802.11i: Otkrivanje,Autentifikacija,Generiranje i distribucija kljuceva,\nZasticeni prijenos podataka,Prekid konekcije.\n-U fazi prijenosa podataka IEEE 802.11i standard definira dvije sheme za zastitu podatkovnih jedinica:\nTKIP-mogu koristiti i stari uredaji uz softversku nadogradnju.CCMP-on zahtjeva i hardversku podrsku\n",
    "32. Sigurnost elektroničke pošte.": "-Elektronicka posta danas predstavlja jednu od najvaznijih i najrasirenijih internetskih aplikacija\nodnosno usluga. Zbog toga se postavljaju visoki zahtjevi na sigurnost takve usluge, prvenstveno u\npogledu autenticnosti i povjerljivosti.\n-Za osiguranje usluge elektronicke poste najcesće susreću dva razlicita pristupa: PGP (Pretty Good\nPrivacy) i S/MIME.\n-PGP omogućava osiguravanje autenticnosti i povjerljivosti, i moze se koristiti za zastitu elektronicke\nposte i pohranjenih datoteka.\n-S/MIME predstavlja sigurnosno prosirenje MIME internetskog standarda za format elektronicke\nposte. Po svojoj općoj funkcionalnosti vrlo je slicno PGP-u (i jedno i drugo rjesenje omogućavaju\npotpisivanje i/ili enkripciju poruke).\n",
    "33. IPsec arhitektura.": "-Sigurnosni mehanizmi na IP razini (IPsec) razvijeni su i implementirani kao obavezni u novoj verziji IP\nprotokola, IPv6.IPsec arhitektura moze se koristiti i sa jos uvijek rasirenijim IPv4 protokolom.\n-Najvaznije svojstvo IPsec-a je da omogućava enkripciju i/ili autentifikaciju cjelokupnog mreznog\nprometa na razini IP protokola, te na taj nacin pruza sigurnost za sve distribuirane aplikacije.\n-Primjer korporativne mreze koju cine dva LAN-a na udaljenim lokacijama. Unutar svakog LAN-a\nprenosi se IP promet bez zastite ,dok se LAN-ovi medusobno povezuju putem nesigurnog okruzenja\nprivatnog ili javnog WAN-a, pri cemu se koristi Ipsec. Ipsec se koristi na rubnim uredajima, pri cemu\nkomprimira i enkriptira sav odlazni IP promet, a dekriptira i dekomprimira sav dolazni promet.\n-IPsec sigurnosne usluge implementiraju se koristenjem dvije vrste prosirenih zaglavlja:\nAH(za osiguranje autenticnosti poruke) i ESP(za enkripciju ili kombinaciju enkripcije i autentifikacije.\n\n",
    "34. IPsec ESP usluga i modovi rada.": "-ESP se moze koristiti za pruzanje vise razlicitih sigurnosnih usluga: povjerljivost, autentifikaciju\nizvora podataka, beskonekcijski integritet, slijedni integritet.\n-Skup usluga koje se pruzaju korisniku ovisi o izabranim opcijama prilikom uspostave sigurnosne\nasocijacije (SA) i implementaciji u samoj mrezi.\n-IPsec ESP usluga moze se koristiti dva moda rada: transportni mod i tunelski mod.\nU transportnom modu moguće je ostvariti usluge enkripcije (i po zelji autentifikacije) izravno izmedu\ndva hosta.Tunelski mod rada omogućava uspostavu virtualnih privatnih mreza (VPN).\n",
    "35. Računalni virusi i crvi.": "-Maliciozni softver mogao bi se definirati kao softver koji je implementiran u racunalni sustav\n(najcesće u tajnosti) s namjerom kompromitiranja povjerljivosti, integriteta ili dostupnosti zrtvinih\npodataka.\nRazlikujemo maliciozne programe koji se samostalno repliciraju i sire (npr. virusi i crvi) od onih koji to\nne cine (npr. backdoor).\n-Racunalni virus predstavlja softverski kod koji je u mogućnosti „inficirati“ druge programe tako sto ih\nmodificira ubacujući rutinu koja mu omogućava multiplikaciju i inficiranje drugih programa.\n-Tijekom svojeg zivotnog vijeka, tipican virus prolazi kroz cetiri faze: Latentna faza,faza\npropagacije,aktiviranja,izvrsavanja.\n-Dva osnovna kriterija po kojima se virusi najcesće klasificiraju su cilj infekcije i strategija prikrivanja.\n-Racunalni crvi su racunalni programi koji umnozavaju sami sebe. Pri tome koriste racunalne mreze\nda bi se kopirali na druga racunala, cesto bez sudjelovanja covjeka. Za razliku od virusa, sa svojim\ndjelovanjem ne moraju inficirati druge programe. Mogu stići i kao privitak u elektronickoj posti te im\npristup racunalu omogućuju propusti u operacijskim sustavima i aplikacijama. Crvi otezavaju rad\nmreze, a mogu ostetiti podatke i kompromitirati sigurnost racunala.\n",
    "36. Distribuirani napadi uskraćivanjem resursa.": "-Napad uskraćivanjem resursa (DoS, Denial of Service) predstavlja pokusaj onemogućavanja\nkoristenja nekog mreznog resursa ili usluge njegovim legitimnim korisnicima. Ukoliko napad dolazi od\nstrane pojedinacnog mreznog cvora, oznacavamo ga kao DoS napad. Često u napadu istovremeno\nsudjeluje vise mreznih cvorova, tada je to distribuirani napad uskraćivanjem resursa(DdoS).\n-DDoS napad moze biti orijentiran ka internim resursima nekog pojedinacnog hosta ili posluzitelja, ili\nse moze fokusirati na prijenosni kapacitet napadnute mreze.\n-Primjer DDoS napada na interne resurse predstavlja „SYN flood“ napad.\n-Distribuirani ICMP napad primjer je DDoS napada koji se fokusira na iscrpljivanje prijenosnog\nkapaciteta mreze.\n-Postoje tri „crte obrane“ protiv DDoS napada: Prevencija Ddos napada,Otkrivanje napada i\nfiltriranje,Otkrivanje i identifikacija izvora napada.\n\n",
    "37. HIDS sustavi.": "-Racunalno-orijentirani IDS sustav (host-based IDS, HIDS) na razlicite nacine nadzire aktivnosti u\nsustavu s ciljem detekcije sumnjivog ponasanja.\n-Primarna prednost HIDS sustava jest mogućnost detekcije i eksternih i internih upada, sto nije slucaj\ns NIDS sustavima i vatrozidima.\n-HIDS sustavi najcesće primjenjuju jedan od dva opća pristupa otkrivanju upada:\n-detekcija anomalija-prikupljanje podataka vezanih uz ponasanje legitimnih korisnika tijekom nekog\nvremena.\n-detekcija na temelju potpisa-podrazumjeva pokusaj definiranja skupa pravila ili „uzoraka“ napada,\nkoji se mogu koristiti za odlucivanje o ponasanju korisnika.\n-Tradicionalno, HIDS sustav orijentiran je na zastitu pojedinacnog sustava (npr. posluzitelja).\n",
    "38. NIDS sustavi.": "-Mrezno-orijentirani IDS (network-based IDS, NIDS) nadzire mrezni promet na izabranim tockama\nunutar mreze.\n-NIDS analizira paket po paket u stvarnom vremenu s ciljem otkrivanja uzorka prometa koji odgovara\nneovlastenom upadu.\n-NIDS moze nadzirati aktivnost protokola mreznog, transportnog i/ili aplikacijskog sloja.\n-I NIDS sustavi prilikom postupka detekcije koriste detekciju anomalija i detekciju temeljenu na\npotpisima.\n-Tipican NIDS sustav ukljucuje odredeni broj senzora, jedan ili vise posluzitelja za upravljacke funkcije\ni jednu ili vise upravljackih konzola za sucelje ka covjeku.\n",
    "39. Vatrozid.": "-Vatrozid predstavlja filter mreznog prometa, koji prema odredenim kriterijima dio prometa\npropusta, dok dio prometa blokira.\n-Moze se ponasati kao pozitivni filter (propusta samo pakete koji zadovoljavaju odredene kriterije) ili\nkao negativni filter (odbacuje pakete koji zadovoljavaju odgovarajuće kriterije).\n-Prilikom dizajniranja vatrozida nastoje se postići sljedeći ciljevi:\n-Sav promet koju ulazi u mrezu ili iz nje izlazi mora proći kroz vatrozid, propustati će se samo\nautorizirani promet. Vatrozid mora biti otporan na napade.\n-Pristup uslugama moze se kontrolirati ovisno o tome koji korisnik pokusava pristupiti usluzi, pa\nvatrozid ujedno omogućava i kontrolu korisnika.\n-U mrezu je moguće implementirati i veći broj vatrozida na razlicitim lokacijama.\n\n",
    "1. Osnovne sigurnosne pretpostavke, pojmovi, usluge i mehanizmi.": "a. Pretpostavke:\ni. Povjerljivost – informacija dostupna samo ovlastenim osobama\nii. Integritet – informacija se ne moze neovlasteno modificirat\niii. Dostupnost – sustav u svakom trenutku dostupan ovlastenim korisnicima\niv. Autenticnost – osiguranje da Je sudionik u komunikaciji stvarno onaj za kojeg\nse predstavlja\nv. Odgovornost – sve aktivnosti nekog entiteta da se mogu jednoznacno\npovezati s tim entitetom\nb. Pojmovi:\ni. Sigurnosni napad – svaka akcija koja ugrozava sigurnost informacije moze biti\npasivan(bez izmjena informacije ili sustava prisluskuje) ili aktivan(modificira\npodatkovne tokove)\nii. Sigurnosni mehanizam – svaki proces kojem je cilj sprijeciti, detektirati napad\nili provesti oporavak sustava nakon sigurnosnog napada\niii. Sigurnosna usluga – svaka usluga kojoj je cilj povećati sigurnost sustava za\nprijenos ili obradu podataka\nc. Usluge:\ni. Autentifikacija – osigurava autenticnost sudionika i porijeklo informacije u\nkomunikacijskom sustavu\nii. Kontrola pristupa – ogranicavanje pristupa uredajima i aplikacijama, dozvola\npristupa ovlastenim korisnicima\niii. Povjerljivost podataka – osigurava da se podaci ne moze pristupiti bez\ndozvole\niv. Integritet podataka – osigurava da podaci koji se posalju bez izmjena stignu\ndo primatelja\nv. Neporecivost - onemogućava bilo kojem subjektu da naknadno opovrgne\nsvoje sudjelovanje u komunikaciji\nd. Mehanizmi:\ni. Šifriranje – transformacija podataka pomoću algoritma u naizgled necitljiv\noblik , pri cemu je za povratak u oblik potrebno znati algoritam i enkripcijski\nkljuc\nii. Digitalni potpis – dodatak informaciji koji primatelja potvrduje autenticnost\nposiljatelja i integritet podataka\niii. Kontrola pristupa – pristup resursima je strogo ogranicen pravilima\niv. Integritet podataka – razliciti nacini osiguranja integriteta podatkovnih\ntokova ili pojedinacni podatkovni tokovi\nv. Autentifikacijska razmjena – osigurava utvrdivanjem identiteta sudionika u\nkomunikaciji\nvi. Nadopuna prometa – umetanje bitova unutar praznina u podatkovnom toku\nkako bi se onemogućili pokusaji analize prometa\nvii. Kontrola usmjeravanja -omogućava izbor pojedinih fizicki osiguranih ruta,\nkao i promjenu rute u slucaju sumnje na kompromitaciju\nviii. Ovjera - oslanjanje na treću (povjerljivu) stranu da osigura odredena\nsigurnosna svojstva za podatkovnu razmjenu\n",
    "3. Monoabecedna supstitucija": "a. Svaki znak u abecedi se zamjenjuje sa nekim drugim znakom u abecedi. Za skup od n\nelemenata postoji n! mogućih permutacija.\nb. Primjer: Cezarova sifra ima samo 25 mogućih kljuceva pa je nesigurna. Sigurnije je\nako se moze koristit bilo koja permutacija abecede.\n",
    "5. Hillova Šifra.": "a. Kriptosustav koji m uzastopnih slova\notvorenog teksta zamjenjuje u m slova u sifratu, ako\nbroj slova nije djeljiv s m, poruku treba nadopuniti i zatim podijeliti na blokove sa m\nslova.\nb. Svakom slovu se dodjeljuje numericka vrijednost (npr. a = 0, b = 1 ....), a supstitucija se\nizracunava mjesanjem m linearnih jednadzbi, ako je npr. m = 2 i c1= (k1, p1 + k2, p2) mod\n26; c2 = (k12, p1 + k22, p2) mod 26.\nk predstavlja matricu koja je kljuc, c je sifrat. Matrica mora biti invertibilna da bi se\nmogla koristiti pri desifriranju.\nPR. Otvoreni tekst: D I D A Kljuc: 6 4 2 8[ ]\n3 8 3 0\nm = 2\nŠifrat: I Y S M\nc. Prednost je sto skriva sve informacije o frekvencijama slova pri m ≥ 5, siguran od\nnapada „samo sifrat“, ali se vrlo lako moze razbiti pomoću napada „poznat otvoreni\ntekst“.\n",
    "6. Vignereova šifra.": "a. To je poliabecedna supstitucijska sifra. Svako slovo otvorenog teksta sifrira se\nrazlicitom Cezarovom sifrom ovisno o odgovarajućem slovu kljuca. Kljuc treba biti\njednake duljine kao i otvoreni tekst, odnosno sifrat sto se najcesće postize\nponavljanjem jedne kljucne rijeci. Šifriranje i desifriranje se provodi pomoću tablice.\nb. Prednost joj je sto se za sifriranje jednog slova otvorenog teksta koristi vise razlicitih\nslova u sifratu.\n",
    "9. Strojevi za šifriranje.": "a. Strojevi koji primjenjuju postupke susptitucije iliti transpozicije kroz vise koraka.\nUbrzavali su sifriranje i desifriranje i imali su mogućnost koristenja velikog broja\nkljuceva.\nb. Jeffersonov kotac – ima 26 diskova koji se mogu okretati neovisno jedan od drugog,\nsvaki sa 26 slova engleske abecede. Posiljatelj dijeli poruku na blokove od 26 i rotira\ndiskove da jedan red bude otvoreni tekst, te odabire bilo koji od preostalih 25 redova za\nsifrat. Primatelj postavlja diskove prema sifratu i trazi otvoreni tekst izmedu ostalih 25\nredova.\nc. Hebernov stroj - Prvi elektricni stroj za sifriranje. Sastavljen od 2 pisaća stroja povezana\nsa 26 zica sa nasumicno izmjenjenim rasporedom.\nd. Enigma – elektromehanicki stroj koristen prije i za vrijeme Drugog svjetskog rata.\nSastojala se od tipkovnice, zaslona sa 26 zaruljica, mehanickih rotora i elektricne\nprespojne ploce. Naprednije verzije su imale preko 1016kombinacija, pa nisu mogle biti\notkrivene „grubom silom“.\n",
    "10. Feistelova šifra.": "a. Naizmjenicno kombinira supstitucije i permutacije\nb. Za ulaz uzima otvoreni tekst podijeljen na dvije polovice i kljuc K, polovice prolaze\nkroz n ciklusa sifriranja i na kraju se spajaju u blok sifrata, kljucevi se razlikuju za\nsvaku pojedinu iteraciju\nc. Za svaku iteraciju se provodi supstitucija na lijevoj polovici tako sto se zbraja pomoću\nXOR funkcije sa rezultatom funkcije F(funkcija runde) primjenjuje na desnu polovicu.\nFunkcija F ima istu strukturu u svim rundama/iteracijama samo joj se parametri\nmijenjaju prema kljucu runde Ki. . Nakon supstitucije napravi se permutacija lijeve i\ndesne polovice podatkovnog bloka. To se ponavlja n puta te se na kraju provodi jos\njedna permutacija lijeve i desne polovice.\nd. Desifriranje identicno sifriranju, samo se kljucevi koriste suprotnim redoslijedom\n",
    "12. AES (Advanced Encryption Standard).": "a. Otvoreni tekst se dijeli na blokove od 16 bajta, a duljina kljuca moze biti 16,24 ili 32\nbajta. Blok je reprezentiran pomoću matrice 4x4, kljuc se isto moze prikazati kao\nkvadratna matrica koja se prosiruje kako bi se generiralo niz medukljuceva.\nb. Šifriranje se sastoji od 10, 12 i 14 rundi za AES-128, AES-192 i AES-256 svaka sa 4\noperacije:\ni. SubBytes\nii. ShiftRows\niii. MixColumns\niv. AddRoundKey\nc. Prvo se provodi AddRoundKey, zatim svaka runda prvo radi SubBytes- transformacija\npomoću S-kutije(matrica 16x16) nakon cega slijedi ForwardShiftRows transformacija\ngdje se svi elementi retka pomicu za 0,1,2, ili 3 mjesta ulijevo. Nakon toga ide\nMicComns transformacija gdje se svaki bajt iz stupca mavira u novu vrijednost koja\npredstavlja funkciju od sva 4 bajta u tom stupcu, ne provodi se u zadnjoj rundi, na\nkraju runde se provodi AddRoundKey transformacija gdje se XOR funkcija izmedu\nulaznih bitova i bitova kljuca runde\nd. Postupak desifriranja nije potpuno identican jer zahtjeva drugaciji redoslijed\ntransformiranja, ali postoji ekvivalentna verzija algoritma desifriranja s istim\nredoslijedom transformacija, samo su zamijenjene svojim inverzija i promijenjen je\nredoslijed kljuceva\n",
    "13. Način rada blokovnih šifri.": "a. Blokovne sifre uzimaju blokove otvorenog teksta duljine b i vraćaju blokove sifrata\niste duljine. Postoji 5 nacina rada blokovnih sifri koji vrijede za sve blokovne sifre.\nb. ECB (electronic codebook) – najjednostavniji, svi se blokovi sifriraju istim\nkljucem idealan za kratke poruke\nc. CBC (cipher block chaining) – prvo provodi operacija XOR sa trenutnim i prethodnim\nblokom, kod bloka XOR se provodi s inicijalizacijskim vektorom\nd. CFB (cipher feedback) – odredeni broj(s) krajnjih ljevih bitova izlaza funkcije sifriranja\nzbraja se XOR funkcijom sa prvim segmentom teksta cime se duljine prvi segment\nsifrata, nakon toga se sadrzaj registra pomice za s bita u lijevo, a segment sifrata se\nstavlja na kraj registra sto se ponavlja dok se ne sifrira cijeli tekst\ne. OFB (output feedback) – slican CFB, samo sto izlazni podatak za funkciju sifriranja u\nidućem koraku salje odmak nakon primjene funkcije sifriranja\nf. CTR (counter) – koristi niz brojaca jednake duljine kao blokovi otvorenog teksta.\nPrvom brojaca se pridruzi neka inicijalna vrijednost, a ostalima se vrijednost\npovećava za jedan, kod enkripcije se brojac sifrira i zbraja se XOR funkcijom sa\nblokom otvorenog teksta\n",
    "14. Asimetrični kriptosustavi(osnovni pojmovi, princip rada, usporedba sa simetričnim)": "a. Temelje se na matematickim funkcijama, ne na supstitucijama i permutacijama\nb. 1976. Diffie i Hellman\nc. Koriste 2 razlicita kljuca, jedan za sifriranje(javni) i jedan za desifriranje(privatni)\nd. Svaki korisnik generira 2 kljuca, jedan cini javno dostupnim, a drugi zadrzava za sebe i\ntako cuva njegovu tajnost. Druga osoba koristi javni kljuc da bi sifrirala poruku koju\nonda salje prvoj osobi te ju ona desifrira pomoću svog privatnog kljuca, nitko drugi\nne moze desifrirati tu poruku.\ne. Podrucja primjene: sifriranje/desifriranje, digitalni potpis i razmjena kljuceva\nf. Za razliku od simetricnih sustava koriste dva algoritma za enkripciju i dekripciju, nema\npotrebe za sigurnim komunikacijskim kanalom kako bi razmjenili kljuceve, potrebno\nje 2N kljuceva za komunikaciju izmedu N osoba dok je kod simetricnih kriptosustava\npotrebno N(N-1)/2 kljuceva, ali su puno slozeniji pa su i sporiji od simetricnih\nsustava.\n",
    "15. RSA kriptosustav": "- Asimetricni sustavi koriste teske matematicke probleme\n- Faktorizacija velikih brojeva - danas nemoguc problem\n- Najpoznatiji asimetricni kriptosustav se temelji na problemu faktorizacije velikih prirodnih brojeva\n- kod RSA\n    - Otvoreni tekst i sifrat su cijeli brojevi izmedju 0 i n-1 za neku vrijednost n\n    - Tipicna vrijednost n je 1024 bita\n    - Otvoreni tekst se sifrira u blokovima\n    - Velicina bloka mora biti x <= log2(n) + 1\n    - Posiljatelj i primatelj moraju znati vrijednost n\n    - Posiljatelj zna vrijednost e\n    - Primatelj zna vrijednost d\n    - Javni kljuc je e, privatni d\n",
    "16. Diffie-Hellmanov protokol za razmjenu ključeva": "a. Temelji se na diskretnim logaritmima koje je vrlo tesko izracunati, za velike proste\nbrojeve ne moze se izracunati diskretni logaritam u razumnom vremenu.\nb. Postupak: osobe koje će razmijeniti kljuc prvo dijele prosti broj q i cijeli broj α za koji\nvrijedi da je α>q i da je primitivni korijen q. Obje osobe zatim generiraju svoj privatni\nkljuc (Xa/Xb) koji je < q te javni kljuc (Ya/Yb) takav da vrijedi YA/B = mod q, nakonα𝑥𝐴/𝐵\ntoga razmjenjuju javne kljuceve. Na kraju kalkuliraju zajednicki tajni kljuc\nK=(YB)XAmod q=(YA)XBmod.\nc. Razmijena nije otporna na Man-in-the-Middle napad pa je potrebno koristiti\nmehanizme za autentifikaciju i digitalni potpis – certificirani javni kljucevi.\n",
    "17. Kriptografske hash funkcije (pojam, načinirada).": "a. Funkcija koja od poruke varijabilne duljine izracunava hash vrijednost fiksne duljine.\nSluzi za zastitu integriteta podataka. Treba biti u mogućnosti lako izracunati hash, a\nda je pri tome iz njega nemoguće izracunati originalnu poruku\nb. Posiljatelj izracuna hash vrijednost i pridodaje ga svojoj poruci koju salje primatelju.\nPrimatelj takoder izracunava hash za primljenu poruku i usporeduje je s primljenom\nhash vrijednosti, ako su jednake poruka i hash vrijednost su stigle nepromijenjene.\nc. Hash vrijednost se mora zastititi od napada\n",
    "20. Generatori pseudoslučajnih brojeva": "",
    "21. Digitalni potpis -DSA algoritam": "a. Osoba pomoću tajnog kljuca moze napraviti enkripciju kako bi verificirala\nautenticnost primatelja koji moze izvrsiti dekripciju javnim kljucem\nb. Osnovne aktivnosti digitalnog potpisivanja: generiranje privatnog i javnog kljuca,\npotpisivanje poruke i provjera potpisa\nc. Osigurava autentifikaciju i\nd. DSA za ulaze u funkciju koristi hash poruke i slucajni broj k generiran samo za taj\npotpis. Funkcija ovisi o posiljateljevom tajnom kljucu PRa i globalnom javnom kljucu\nPUg, kao rezultat daje potpis s dva dijela: r i s. Verifikacijska funkcija kao ulaze prima\nhash primljene poruke i potpis, a ovisi o globalnom javnom kljuu PUg i\nposiljateljevom javnom kljucu PUa, ako je potpis valjan izlazna vrijednost funkcije\njednaka je r. DSA je temeljen na problemu izracuna diskretnih logaritama.\n",
    "22. Blok-lanac (Blockchain).": "a. Distribuirana baza podataka (knjiga transakcija) na peer-to-peer mrezi bez sredisnjeg\nposluzitelja.\nb. Sadrzi listu zapisa – svaki ima hash vrijednost prethodnog zapisa, timestamp i\npodatke o transakciji (najcesće financijske, ali moze sadrzavati bilo koje druge\npodatke).\nc. Sigurnost se temelji na cinjenici da bi netko za manipulaciju bazom podataka morao\nraspolagati enormnom recunalnom snagom.\nd. Decentralizirana peer-to-peer mreza je otporna na kvarove, osim toga provode se\npostupci verifikacije validacije transakcija , te ulancavanja novih blokova u lanac\ne. Podrucja primjene: financije, osiguranja, Internet of Things, smart contracts,\nenergetski sektor, medicina...\n",
    "1. Osnovne sigurnosne pretpostavke, pojmovi, usluge i mehanizmi": "- Pretpostavke\n    - CIA\n        - Povjerljivost\n            - Confidentiality\n            - Osiguranje da povjerljiva informacija nece biti dostupna neovlastenim osobama\n        - Integritet\n            - Integrity\n            - Osiguranje da neovlastena osoba nece moci izmejniti podatke i programe niti manipulirati racunalnim sustavom\n        - Dostupnost\n            - Availability\n            - Osiguranje da ce resursi u svakom trenutku biti na raspolaganju autoriziranim korisnicima\n        - Autenticnost\n            - Authenticity\n            - Podrazumijeva da je sudionik u komunikaciji doista onaj za kojeg se pretpostavlja\n        - Odgovornost\n            - Accountability\n            - Podrazumijeva se da sve aktivnosti nekog entiteta se mogu jednoznacno povezati s tim entitetom\n- Usluge\n    - Autentifikacija\n        - Osigurava autenticnost komunikacije\n    - Kontrola pristupa\n        - Kontrola pristupa uredjajima i aplikacijama mreznim putem\n    - Povjerljivost podataka\n        - Osigurava podatke od neautoriziranog pristupa njihovom sadrzaju\n    - Integritet podataka\n        - Osigurava da podatci nisu modificirani tijekom prenosa\n    - Neporecivost\n        - Onemogucava bilo kojem subjektu da naknadno opovrgne svoje sudjelovanje u komunikaciji\n- Mehanizmi\n    - Sifriranje\n        - Transformacija podataka primjenom mat. algoritama\n    - Digitalni potpis\n        - Dodatak izvornom podatku koji primatelju potvrdjuje izvor i integritet podataka\n    - Kontrola pristupa\n        - Pripstup resursima kroz definirana pristupna pravila\n    - Integritet podataka\n        - Razliciti nacini za osiguranje pintegriteta podatkovnih tokova\n    - Autentifikacijska razmjena\n        - Mehanizam za utvrdjivanje identiteta subjekata        \n",
    "2. Osnovni kriptografski pojmovi i klasifikacija kriptosustava": "- Pojmovi\n    - Otvoreni tekst\n        - Plain text\n    - Sifrat ili kriptogram\n        - Ciphertext\n    - Sifriranje ili enkripcija\n        - Encryption\n    - Desifriranje ili dekripcija\n        - Decryption\n- Klasifikacija\n    - Prema\n        - Tipu operacija koje se koriste za sifriranje\n            - Substitucijski\n            - Transpozicijski\n            - Oboje\n        - Nacin na koji se obradjuje otvoreni tekst\n            - Blokovna sifra\n                - Block cipher\n            - Protocna sifra\n                - Stream cipher\n        - Tajnost i javnost kljuceva\n            - Simetricni\n            - Asimetricni            \n",
    "3. Monoabecedna sifra": "- Zamjena simbola s drugim simbolom\n- Npr cezarova sifra\n",
    "4. Playfairova sifra": "- Bigramska sifra\n- Ide ona matrica\n",
    "5. Hillova sifra": "- Mnozenje matrica i modulo mat\n- Matrica sluzi kao kljuc\n    - Mora biti invertibilna\n    - Inverz se koristi za desifriranje\n- Skriva se informacija o frekvenciji slova\n",
    "6. Vigenerova sifra": "- Poliabecedna substitucijska sifra\n- 1 slovo se moze preslikati u 1 od n mogucih slova\n- za svaki char texta se uzima char keya, zbroj i modulo, easy\n- Jedan od najpopularnijih sustava u povijesti\n",
    "7. Jednokratna biljeznica": "- Savrseno siguran kriptosustav\n- Kljuc je jednake duljine kao i otvoreni tekst\n- Svaki bit se XOR-a izmedju kljuca i teksta\n- Svaki kljuc bi se trebao koristiti samo jednom\n    - Apsolutno siguran sustav    \n",
    "8. Transpozicijska sifra": "- Elementi otvorenog teksta ostaju\n- Mjenja se polozaj\n- Stupacna transpozicija\n- Nije tesko desifrirati\n",
    "9. Strojevi za sifriranje": "- Primjenjuju algoritme kroz vise koraka\n- Jeffersonov kotac\n    - Diskovi na osovini\n    - 26 diskova\n    - 25 sifrata + otvoreni tekst\n- Hebernov stroj\n    - Prvi elektricni stroj za sifriranje\n    - Stroj za tipkanje + 5 rotora\n    - Monoabecedna substitucija * 5\n- ENIGMA\n    - Najpoznatiji elektromehanicki stroj za sifriranje\n    - Tipkovnica, tri mehanicka rotora i elektricna prespojna ploca\n        - Rotori - diskovi sa 26 kontakata\n        - Izlaz jednog rotora predstavlja ulaz drugome\n    - Na kraju reflektor pa ide nazad signal\n",
    "10. Feistelova sifra": "- Koristi se u vecini suvremenih simetricnih blokovnih kritposustava\n- Naizmjenicna uporaba substitucija i transpozicija kroz vise iteracija\n",
    "11. DES": "- Data encryption standard\n    - Globalni kriptografski standard\n- nema kruva od procesa\n",
    "12. AES": "- Advanced encryption standard\n- Zamjena DES-a\n- ma nema kruva, 25 slideova i ovaj i DES\n",
    "13. Nacini rada blokovnih sifri": "- Blokovne sifre uzimaju blokove otvorenog teksta odredjene velicine kao ulaz i proizvode blokove sifrata jednake duljine\n- 5 nacina rada\n- ECB (electronic codebook)\n    - Otvoreni tekst se djeli na n bitne blokove\n    - Svaki blok sifrira istim kljucem\n    - Idealan za kratke poruke, koristi se za razmjenu kljuceva\n- CBC (cipher block chaining)\n    - Identicne blokove otvorenog teksta odgovaraju razliciti sifrati\n    - Prvo se napravi XOR sa sifratom prethodnog bloka a onda ide sifriranje\n- CFB (cipher feedback)\n    - Umjesto u blokove, otvoreni tekst se djeli u segmente od n bitova\n    - radi neke bogove isuse nemam pojma, s b n t s b b b bs bs bt registar nesto nesto\n- OFB (output feedback)\n    - Slican CFB\n    - Ulazni podatak za funkciju sifriranje u iducem koraku salje odmah nakon primjene funkcije sifriranja u prethodnom koraku\n        - Ova recenica nema nikakvo znacenje i ne prenosi nikakvu informaciju\n        - Nema kruva\n- CRT (counter)\n    - Koristi se niz brojaca\n    - Brojaci jednake duljine kao blokovi otvorenog teksta\n    - Prvi brojac ima neku vrijednost a ostali se inkrementiraju\n    - Brojac se sifrira pa se primjeni XOR na sifrirani brojac i blok otvorenog teksta\n    - Nije ulancan pa se moze paralelizirati\n",
    "14. Asimetricni kriptosustavi": "- Kriptosustavi s javnim kljucem\n- Temeljeni na matematickim funkcijama umjesto substitucijama i permutacijama\n- Koriste se razliciti kljucevi za sifriranje i desifriranje\n    - Sifriranje javnim\n    - Desfiriranje privatnim\n    - Kod nekih sustava nije bitno ali se uvijek onaj drugi koristi za desfiriranje\n- Postupak\n    - Svaki korisnik generira par kljuceva\n    - Jedan privatni jedan javni\n    - Za sifriranje poruke koristi se javni kljuc druge osobe\n    - Za desifriranje se koristi privatni kljuc (osobe koja prima poruku)\n- Omogucavanje autenticnosti komunikacije\n    - Za sifriranje se koristi privatni kljuc\n    - Za desifirranje se koristi javni kljuc\n    - Sifrirana poruka predstavlja digitalni potpis\n        - Osigurava autenticnost i integritet poruke\n        - Ne osigurava tajnost\n            - Koja picka materina je tajnost?\n            - Jebi se eto to\n- Osiguranje povjerljivosti, autenticnosti i integriteta\n    - Dvostruka primjena algoritma asimetricne enkripcije\n    - Enkripcija s oba kljuca\n- Koriste se za\n    - Sifriranje\n    - Digitalni potpis\n    - Razmjenu kljuceva\n- Osnovne pretpostavke koje algoritam temeljen na javnom kljucu mora zadovoljiti\n    - Za primatelja mora biti racunski jednostavno generirati odgovarajuci par javnog i privatnog kljuca\n    - Za posiljatelja mora biti racunski jednostavno generirati sifrat\n    - Za primatelja mora biti racunski jednostavno desifrirati\n    - Za napadaca mora biti nemoguce u razumnom vremenu odrediti privatne kljuceve\n    - Za napadaca mora biti nemoguce odrediti poruku poznajuci sifrat i javni kljuc\n    - Pozeljno je da se dva kljuca mogu primjeniti u bilo kojem redosljedu\n- Prednosti sustava\n    - Ne postoji potreba za sigurnim komunikacijskim kanalom\n    - Za komunikaciju unutar grupe N osoba potrebno je 2N kljuceva\n    - Moze se koristiti za digitalno potpisivanje poruka\n- Nisu zamjena za simetricne\n- Puno slozeniji\n- Koriste se hibridni sustavi\n    - Razmjena poruka koristeci simetricne kriptosustave\n    - Razmjena kljuceva koristeci asimetricne\n",
    "16. Diffie-Hellmanov protokol za razmjenu kljuceva": "- Algoritam temeljen na problemu diskretnog logaritma\n- ma nema kruva, sve je nesto na kineskom\n- Sigurnost lezi u cinjenici da je vrlo tesko izracunati dikretne logaritme\n    - Dok je s druge strane potenciranje modulo prosti broj relativno jednostavno\n    - Za velike brojeve se smatra nemoguce izracunati logaritme u razumnom vremenu\n",
    "17. Kriptografske hash funkcije": "- Hash funkcija za ulaz daje neki random izlaz\n    - Izlaz je odredjene duljine\n- Dobra hash funkcija daje izlaze koji su ravnomjerno distribuirani i prividno slucajni\n- Mala promjena ulaza rezultira radikalnom promjenom hasha\n- Koristi se za zastitu integriteta podataka\n- Funkcije moraju zadovoljiti sljedeca svojstva\n    - Radi s ulaznim blokovima proizvoljne duljine\n    - Lako izracunati hash\n    - Nemoguce naci 2 ista hasha\n    - Nemoguce naci source od hasha (jednosmjerno)\n    - Nemoguce naci 2 sourcea koji daju isti hash\n- Koriste se prilikom autentifikacije poruke gdje omogucavaju provjeru integriteta poruke\n- Primatelj provodi izracunavanje hash vrijednosti i usporedjuje rezultat s danim hashom\n- Nacini osiguranja autenticnosti\n    - Poruka se sifrira zajedno sa hashom\n    - Samo se hash sifrira (jebeno zasto?)\n    - Ne koristi se enkripcija kru te jebo tehnike\n    - ILI SE KORISTI ENKRIPCIJA!?!?!?!? WAO\n",
    "18. SHA": "- Secure Hash Algortihm\n- Za ulaz uzima blok otvorenog teksta\n- Za izlaz daje hash odredjene duljine (za SHA512 to je 512 bita)\n- za SHA512\n    - Postupak procesiranja\n        - Dodavanje bita za nadopunu\n        - Dodavanje duljine poruke\n        - Inicijalizacija hash medjuspremnika\n        - Procesiranje poruke u 1024 bitnim blokovima\n        - Exit wow\n",
    "20. Generatori pseudoslucajnih brojeva": "- O ovome prezentacija ne zna nista\n",
    "21. Digitalni potpis - DSA": "- Pomcu izvorne poruke i tajnog kljuca osoba moze generirati digitalni potpis\n- Moze se verificirati autenticnost potpisa koristeci izvornu poruku i javni kljuc posiljatelja\n- DSA omogucuje\n    - Autentifikaciju\n    - Nepobitnost\n- Postupak potpisivanja\n    - Generiranje kljuca\n    - Potpisivanje\n    - Provjera potpisa\n- DSA (Digital Signature Algorithm)\n- ISTI jebeni kurac kao i kod hasha i MAC-a ISTI KURAC\n- Prvo se racuna hash\n    - Pa se enkriptira\n    - I to je to\n- Na prijemnoj strani\n    - Rauna se hash\n    - Hash zajedno s potpisom se verificira\n    - Verifikacija ovisi o globalnom javnom kljucu i posiljateljovom javnom kljucu\n    - Izlaz verifikacije je vrijednost koja je jednaka r komponenti potpisa\n- DSA temeljen na problemu racunanja diskretnog logaritma\n",
    "22. Blokchain": "- Distribuirana baza podataka\n- Cesto se naziva i distribuirani ledger (knjiga transakcija)\n- Realizira se kroz peer to peer mrezu\n- Blokchain sadrzi listu blokova koja stalno raste\n    - Blokovi se povezuju i osiguravaju primjenom kriptografskih metoda\n- Svaki blok ima hash prethodnog\n- Otporna na kvarove zbog decentraliziranosti\n",
    "23. Distribucija kljuceva pomocu simetricne enkripcije": "- Za primjenu algoritma simetricne enkripcije obe strane moraju imati zajednicki tajni kljuc\n- Snaga kriptosustava ovisi i o tehnici distribucije kljuceva\n- Koristi se centar za distribuciju kljuceva\n    - Distribucija parova kljuceva korisnicima\n    - Svaki korisnik djeli jedinstveni tajni kljuc s centrom\n- Centar se temelji na hijerarhiji kljuceva\n- Komunikacija izmedju krajnjih sustava se realizira pomocu privremenog kljuca (session key)\n- Session key se koristi za vrijeme jedne logicke konekcije\n- Session key se razmjenjuju enkriptirani pomocu glavnog kljuca izmedju centra i korisnika\n- Problem razmjene master kljuceva (glavnih kljuceva) izmedju korisnika i centra\n- Proces\n    - Korisnik A trazi session key od centra\n    - Centar daje session key sifriran koristeci Ka i originalni zahtjev\n        - Koji kurac je Ka? ne znamo\n    - Kornisnk A koristi session key \n        - Tako onda svi ostali dobiju session key iako ih A nikad nije nikom dao\n        - mhm ok\n    - Koristeci session key osoba B salje novu vrijednost nonce osobi A\n        - Ne znamo koji je to kurac\n    - Koristeci session key A odgovara s nekom jebenom funkcijom isusove nonce jebene\n        - S tim se B uvjerava da je u 3. koraku primeljan poruka\n        - Autentifikacija\n",
    "24. Distribucija javnih kljuceva": "- Vise predlozenih nacina\n    - Grupiraju se u 4 skupine\n        - Javno objavljanje\n            - Najjednostavniji\n            - Mogucnost krivotvorenja\n        - Javno dostupni direktorij\n            - Bolje\n            - Postoji mogucnost kompromitacije direktorija\n        - Autoritet za javne kljuceve\n            - Autoritetu se salje zahtjev zajedno s javnim kljucem posiljatelja\n        - Certifikati za javne kljuceve\n",
    "25. X509 certifikati": "- Shema formatiranja certifikata javnih kljuceva\n- Koriste se u vecini mreznih sigurnosnih aplikacija\n- X509 dio iz X500 koje definiraju uslugu direktorija\n- Direktorijem se smatra posluzitelj\n- Moze sluziti kao repozitorij certifikata za javne kljuceve\n- X509 definira alternativne autentifikacijske protokole\n- Temelji se na uporabi kriptografije javnog kljuca i digitalnih potpisa\n- Svaki korisnik ima svoj certifikat\n- Certifikate provjerava certification authortiy (CA)\n    - CA potpisuje certifikat svojim privatnim kljucem\n    - Certifikati koje CA izda\n        - Se moze provjeriti korisnicki javni kljuc koji je certificiran\n        - Nitko osim CA ne moze modificirati certifikat\n- Zato sto se ne mogu krivotvoriti certifikate je moguce spremiti bez posebnih mjera zastite\n- Certifikati imaju ogranicen period trajanja\n",
    "26. Kerberos": "- Jedan od najrasirenijih sustava za autentifikaciju\n-  Rjesava problem autentifikacije korisnika u otvorenom distribuiranom okruzju\n- Posluzitelji moraju ograniciti pirstup samo autoriziranim korisnicima i moraju omoguciti autentifikaciju zahtjeva za uslugom\n- 3 scenarija prijetnje\n    - Napadac moze ostvariti pristup nekoj radnoj stranici i pretvarati se da je netko drugi\n    - Moze promijeniti radnu adresu neke radne stanice tako da zahtjevi prividno stizu s druge\n    - Moze prisluskivati komunikaciju i ostvariti pristup posluzitelju jebenom impersonacijom koliko ti rijeci treba kru te jebo ovo nista ne znaci ista jebem ti pamet veliku\n- Kerberos omogucava implementaciju centraliziranog posluzitelja za autentifikaciju\n    - Oslanja se na simetricnu enkripciju\n",
    "27. EAP": "- Extensible authentication protocol\n- Framework za autentifikacijske protokle i pristup mrezi\n- Pruza skup protokolnih poruka koje enkapsuliraju razlicite metode autentifikacije koje se koriste izmedju korisnika i posluzitelja\n- Prosiriv protokol\n- Podrzava vise autentifikacijskih metoda\n- Pruza genericku transpornu uslugu za razmjenu autentifikacijskih informacija (malo ponavljamo sve drugim rijecima)\n- Najcesce koristene metode\n    - EAP TLS (EAP transport layer security)\n    - EAP TTLS (EAP Tunneled TLS)\n    - EAP GPSK (EAP Generalized Pre-Shared Key)\n    - EAP IKEv2 (ovo ne znamo shh)\n- Neovisno o metode autentifikacijske poruke se razmjenjuju putem EAP poruka\n",
    "28. SSL/TLS": "- Secure sockets layer\n- Jedan od najrasirenijih standarda zajedno sa sljedbenikom TLS (Transport layer security)\n- Oslanja se na TCP\n- SSL Record protocol pruze osnovne sigurnosne usluge razlicitim protokolima viseg sloja\n- Tri protokola viseg sloja definirana kao da su dio SSL protokolnog stoga (koja picka materina?) \n    - SSL Handshake\n    - SSL Change Cipher Spec\n    - SSL Alert\n- SSL Session i SSL Connection (vrlo bitno navodno)\n    - Konekcija predstavlja transport koji pruza odgovarajucu vrstu p2p usluge\n    - Sjednica predtsavlja asocijaciju izmedju klijenta i posluzitelja\n        - Skup kriptografskih sigurnosnih parametara\n        - Koriste se kako bi se izbjeglo pregovaranje o novim sigurnosnim parametrima za svaku konekciju\n- SSL record protocol pruza 2 usluge\n    - Povjerljivost\n        - Handshake protokol definira dijeljeni tajni kljuc koji se koristi za konvencionalnu enkripciju podatkovnog dijela\n    - Integritet poruke\n        - Handshake protokol takodjer definira dijeljeni tajni kljuc koji se koristi za kreiranje MAC koda (sva sreca pa smo 2 puta ponovili istu stvar)\n- SSL record protocol aplikacijske podatke najprije fragmentira u blokove, komprimira (optional), dodaje MAC, enkriptira, dodaje zaglavlje i prosljedjuje TCP-u\n- Primljeni podaci se dekriptiraju, verificirajju, dekomprimiraju te se fragmenti sastavljaju\n- SSL change cipher spec\n    - Najjednostavniji specificni protokol koji koristi SSL record protokol\n    - Ima 1 bit vrijednosti 1\n    - Svrha je stanje na cekanju kopirati u trenutacno stanje kako bi se azurirao kriptografski skup koji se koristi za trenutnu konekciju\n    - Hvala razumijem sad\n- SSL alert protokol\n    - Koristi se za prijenos razlicitih poruka upozorenja\n",
    "29. SSH": "- Protokol za sigurnu mreznu komunikaciju\n    - Dizajniran da bude jednostavan za implementaciju i uporabu\n- Siguran prijenos datoteka i emaila\n- Implementiran u skoro svim OS-ima\n- Organiziran u 3 protokola\n    - Transport Layer\n        - Omogucava autentifikaciju posluzitelja, povjerljivosti i integritet podataka a moze omoguciti i kompresiju\n    - User Authentication\n        - Autentificira korisnika\n    - Connection\n        - Multipleksira vise komunikacijskih kanala u jednu SSH konekciju\n- Podrzava 3 metode autentifikacije\n    - Javni kljuc\n        - Autentifikacija slanjem poruke koja sadrzi serverov javni kljuc a potpisana je korisnikovim privatnim kljucem\n    - Lozinka\n        - Jebena lozinka\n    - Hostbased autentifikacija\n        - Provodi se na razini klijentskog hosta\n- SSH konekcijski protokol se izvodi iznad SSH protokola transportnog sloja i zadaca mu je unutar jedne sigurne autentificirane konekcije multipleksira vise logickih kanala\n- Svakom kanalu obje strane pridruzuju jedinstven broj kanala\n- Na kanalima je podrzana kontrola toka pomocu mehanizma klizeceg prozora\n- Kanali mogu biti u fazi otvaranja, funkcije i zatvaranja\n- SSH konekcijski protokol razlikuje 4 vrste kanala\n    - Session\n    - X11\n    - Forwarded TCPIP\n    - Direct TCPIP\n- Moze portforwardat, vrlo korisno\n- Portforward tzv tuneliranje\n",
    "30. Sigurnost u bezicnim mrezama": "- Izlozenije sigurnosnim problemima\n- Kljucni cimbenici koji pridonose riziku\n    - Kanal\n        - Komunikacija se temelji na broadcastingu\n        - Vrlo podlozno prisluskivanju i ometanju\n    - Pokretljivost\n    - Resursi\n        - Ograniceni resursi na uredjajima, otezava implementaciju sigurnosnih mehanizama\n    - Pristupacnost\n        - Uredjaji se cesto ostavljaju bez nadzora na udaljenim lokacijama\n- 3 tocke napada\n    - Endpoint\n    - Access point\n    - wifi\n- Sigurnosne prijetnje\n    - Slucajna asocijacija\n        - Slucajno se poveze na krivi access point\n    - Namjerna asocijacija\n        - Uredjaj se konfigurira kao access point tako da bi se drugi spojili na njega\n    - Ad hoc mreze\n        - peer2peer\n    - Netradicionalne mreze\n        - Bluetooth, rfid\n    - Kradja identiteta\n        - Napadac moze uzeti tudji mac\n    - Man in the middle napadi\n    - DOS\n    - Napadi umetanjem prometa\n        - Umetanjem kontrolnih poruka napadac pokusava rekonfigurirati usmjerivace\n- Osnovne preporuke i tehnike\n    - Uporaba enkripcije mreznog prometa\n    - Uporaba vatrozida i antivirusnog softvera\n    - Iskljuciti SSID broadcast\n    - Promijeniti podrazumijevani identifikator usmjerivaca koja picka materina sveta sta ovo znaci??\n    - Promijeniti default admin pass\n    - Implementirati dodatno filtriranje uredjaja po mac adresi\n- Najrasireniji standardi danas pripadaju IEEE 802.11 skupini\n",
    "31. IEEE 802.11 i RSN": "- Robust security network\n- Usluge\n    - Autentifikacija\n    - Kontrola pristupa\n    - Privatnost uz integritet poruke\n- Faze\n    - Otkrivanje\n        - AP koristi kontrolne poruke za oglasavanje\n    - Autentifikacija\n        - AP i autentifikacijski server (AS) se medjusobno autentificiraju\n        - Sav ostali promet blokiran\n    - Generiranje i distribucija kljuceva\n        - AP i stanica generiraju kljuceve\n    - Zasticeni prijenos podataka\n        - Okviri se razmjenjuju izmedju stanice i endpointa preko AP-a\n    - Prekid konekcije\n        - Stanica i AP razmjenjuju kontrolne okvire i nema vise konekcije\n- IEEE 802 koristi kontrolirane i nekontrolirane portove\n    - U bezicnoj mrezi AP moze imati samo 2 fizicka porta\n        - 1 za distribuirani sustav (???????????????)\n        - 1 za bezicnu komunikaciju lmao fizicki portovi a lol\n    - Svaki logicki port se mapira na jedan od ta 2 fizicka porta\n    - Nekontrolirani port omogucava komunikaciju sa autentifikacijskim posluziteljem\n",
    "32. Sigurnost elektricne poste": "- email vrlo vazan\n- Visoki zahtjevi na sigurnost\n- PGP\n    - Pretty good privacy\n    - Zastita emaila i datoteka\n    - Koristi se jer\n        - Je besplatan\n        - Temeljen na algoritmima koji su prosli brojne analize i smatraju se sigurnima\n        - Ima siroki spektar primjene\n        - Nije razvijen od strane vladine organizacije\n        - Postao dio globalnih internetskih standarda\n    - Omogucava\n        - Digital signature\n        - Message encryption\n        - Compression\n        - Email compatibility\n- SMIME\n    - Sigurnosno prosirenje MIME standarda za email\n    - Glavni problemi koje rjesava\n        - SMTP ne moze prenositi izvrsne binarne datoteke\n        - SMTP ne moze prenositi tekst koji sadrzi znakove izvan 7 bit ASCII skupa\n        - SMTP server mogu odbiti poruku vecu od odredjenog limita\n        - SMPT gateway koji prevode izmedju ASCII i EBCDIC skupa znakova ne koriste konzistentni nacin mapiranja - pogreske kod prevodjenja\n    - Definira 5 novih polja zaglavlja koja sadrze informaciju o tijelu poruke\n    - Definirani brojni novi formati moguceg sadrzaja poruke s ukljucenom podrskom za multimedijalnu email\n",
    "33. IPsec arhitektura": "",
    "34. IPsec ESP usluga i modovi rada": "",
    "35. Racunalni virusi i crvi": "",
    "36. DDOS": "",
    "37. HIDS": "",
    "38. NIDS": "",
    "39. Firewall": ""
}